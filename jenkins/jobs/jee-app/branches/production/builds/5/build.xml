<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.31">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.RestartFlowFactoryAction plugin="pipeline-model-definition@1.3.4.1">
      <originRunId>jee-app/production#1</originRunId>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.RestartFlowFactoryAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>admin</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
        <entry>
          <org.jenkinsci.plugins.pipeline.modeldefinition.causes.RestartDeclarativePipelineCause plugin="pipeline-model-definition@1.3.4.1">
            <originRunNumber>1</originRunNumber>
            <originStage>Security Gate</originStage>
          </org.jenkinsci.plugins.pipeline.modeldefinition.causes.RestartDeclarativePipelineCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.63">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <jenkins.scm.api.SCMRevisionAction plugin="scm-api@2.3.0">
      <sourceId>blueocean</sourceId>
      <revision class="jenkins.plugins.git.GitBranchSCMRevision" plugin="git@3.9.3">
        <head class="jenkins.plugins.git.GitBranchSCMHead">
          <name>production</name>
        </head>
        <hash>5801c1478c7c748efa988e59eb3e7e7c9445a0ab</hash>
      </revision>
    </jenkins.scm.api.SCMRevisionAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.13">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@1.3.4.1">
      <stagesUUID>58a06f5d-6a06-4a67-8a8e-a409c0621762</stagesUUID>
      <stagesList>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStages plugin="pipeline-model-api@1.3.4.1">
          <stages>
            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <name>build</name>
              <branches>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <name>sh</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>script</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">mvn clean install</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                  </steps>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
              </branches>
              <parallelContent/>
            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <name>SonarQube analysis</name>
              <branches>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                      <name>withSonarQubeEnv</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                        <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                          <value class="string">sonar</value>
                        </value>
                      </args>
                      <children>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                          <name>sh</name>
                          <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                            <arguments class="linked-hash-map">
                              <entry>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <key>script</key>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                  <value class="string">mvn sonar:sonar</value>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              </entry>
                            </arguments>
                          </args>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      </children>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                  </steps>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
              </branches>
              <parallelContent/>
            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <name>Deliver for development</name>
              <when>
                <conditions>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTWhenCondition>
                    <name>branch</name>
                    <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                      <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                        <value class="string">development</value>
                      </value>
                    </args>
                    <children/>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTWhenCondition>
                </conditions>
              </when>
              <branches>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <name>input</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>message</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">Deploy for development ? (Click &quot;Proceed&quot; to continue)</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                  </steps>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
              </branches>
              <parallelContent/>
            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <name>Security Gate</name>
              <branches>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <name>sh</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>script</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">sleep 5s</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                      <name>timeout</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>time</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="int">5</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>unit</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">MINUTES</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                        </arguments>
                      </args>
                      <children>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                          <name>script</name>
                          <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                            <arguments class="linked-hash-map">
                              <entry>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <key>scriptBlock</key>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                  <value class="string">def result = waitForQualityGate()
                        if (result.status != &apos;OK&apos;) {
                            error &quot;Pipeline aborted due to quality gate failure: ${result.status}&quot;
                        } else {
                            echo &quot;Quality gate passed with result: ${result.status}&quot;
                        }</value>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              </entry>
                            </arguments>
                          </args>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                      </children>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                  </steps>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
              </branches>
              <parallelContent/>
            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <name>Deploy for production</name>
              <when>
                <conditions>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTWhenCondition>
                    <name>branch</name>
                    <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                      <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                        <value class="string">production</value>
                      </value>
                    </args>
                    <children/>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTWhenCondition>
                </conditions>
              </when>
              <branches>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <name>input</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>message</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">Deploy to production ? (Click &quot;Proceed&quot; to continue)</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                  </steps>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
              </branches>
              <parallelContent/>
            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
          </stages>
          <uuid>58a06f5d-6a06-4a67-8a8e-a409c0621762</uuid>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStages>
      </stagesList>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <hudson.plugins.git.util.BuildData plugin="git@3.9.3">
      <buildsByBranchName>
        <entry>
          <string>production</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@2.7.6">
              <sha1>5801c1478c7c748efa988e59eb3e7e7c9445a0ab</sha1>
              <branches class="singleton-set">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>production</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>5</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>http://root@eef87f38e5a2/root/jee-app.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <hudson.plugins.git.GitTagAction plugin="git@3.9.3">
      <tags class="hudson.util.CopyOnWriteMap$Tree">
        <entry>
          <string>production</string>
          <list/>
        </entry>
      </tags>
      <ws>/var/jenkins_home/workspace/jee-app_production</ws>
    </hudson.plugins.git.GitTagAction>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@2.7">
      <revisionStates>
        <entry>
          <string>git http://root@eef87f38e5a2/root/jee-app.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
    <com.cloudbees.jenkins.plugins.bitbucket.FirstCheckoutCompletedInvisibleAction plugin="cloudbees-bitbucket-branch-source@2.4.1"/>
  </actions>
  <queueId>181</queueId>
  <timestamp>1550243301495</timestamp>
  <startTime>1550243301501</startTime>
  <result>FAILURE</result>
  <duration>7099</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>pipeline {
    agent any
    stages {
        stage(&apos;build&apos;) {
            steps {
                sh &apos;mvn clean install&apos;
            }        
        }
        stage(&quot;SonarQube analysis&quot;) {
            steps {
                withSonarQubeEnv(&apos;sonar&apos;) {
                        sh &apos;mvn sonar:sonar&apos;
                }
            }
        }
        
        stage(&apos;Deliver for development&apos;) {
            when {
                branch &apos;development&apos; 
            }
            steps {
                input message: &apos;Deploy for development ? (Click &quot;Proceed&quot; to continue)&apos;
                //sh &apos;Deploying to development ...&apos;
            }
        }
        
         stage(&apos;Security Gate&apos;) {
             steps {
                sh &apos;sleep 5s&apos;
                timeout(time: 5, unit: &apos;MINUTES&apos;) {
                    script {
                        def result = waitForQualityGate()
                        if (result.status != &apos;OK&apos;) {
                            error &quot;Pipeline aborted due to quality gate failure: ${result.status}&quot;
                        } else {
                            echo &quot;Quality gate passed with result: ${result.status}&quot;
                        }
                    }
                }

            }
        }
        
        stage(&apos;Deploy for production&apos;) {
            when {
                branch &apos;production&apos;  
            }
            steps {
                input message: &apos;Deploy to production ? (Click &quot;Proceed&quot; to continue)&apos;
                //sh &apos;Deploying to production ...&apos;
            }
        }
        
    }
}</script>
    <loadedScripts class="map"/>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>283859034</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>626832263</long>
      </entry>
      <entry>
        <string>run</string>
        <long>1124684421</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>69093361</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>102553813</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>46</iota>
    <head>1:46</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.3">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <name>origin</name>
            <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
            <url>http://root@eef87f38e5a2/root/jee-app.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches class="singleton-list">
          <hudson.plugins.git.BranchSpec>
            <name>production</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.CleanBeforeCheckout/>
          <hudson.plugins.git.extensions.impl.CleanCheckout/>
          <hudson.plugins.git.extensions.impl.LocalBranch>
            <localBranch>**</localBranch>
          </hudson.plugins.git.extensions.impl.LocalBranch>
          <jenkins.plugins.git.GitSCMSourceDefaults>
            <includeTags>false</includeTags>
          </jenkins.plugins.git.GitSCMSourceDefaults>
          <hudson.plugins.git.extensions.impl.BuildChooserSetting>
            <buildChooser class="jenkins.plugins.git.AbstractGitSCMSource$SpecificRevisionBuildChooser">
              <revision plugin="git-client@2.7.6">
                <sha1>5801c1478c7c748efa988e59eb3e7e7c9445a0ab</sha1>
                <branches class="singleton-set">
                  <hudson.plugins.git.Branch>
                    <sha1 reference="../../../sha1"/>
                    <name>production</name>
                  </hudson.plugins.git.Branch>
                </branches>
              </revision>
            </buildChooser>
          </hudson.plugins.git.extensions.impl.BuildChooserSetting>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/jenkins_home/workspace/jee-app_production</workspace>
      <changelogFile>/var/jenkins_home/jobs/jee-app/branches/production/builds/1/changelog0.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.3">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <name>origin</name>
            <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
            <url>http://root@eef87f38e5a2/root/jee-app.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches class="singleton-list">
          <hudson.plugins.git.BranchSpec>
            <name>production</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.CleanBeforeCheckout reference="../../../../org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout/scm/extensions/hudson.plugins.git.extensions.impl.CleanBeforeCheckout"/>
          <hudson.plugins.git.extensions.impl.CleanCheckout reference="../../../../org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout/scm/extensions/hudson.plugins.git.extensions.impl.CleanCheckout"/>
          <hudson.plugins.git.extensions.impl.LocalBranch reference="../../../../org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout/scm/extensions/hudson.plugins.git.extensions.impl.LocalBranch"/>
          <jenkins.plugins.git.GitSCMSourceDefaults>
            <includeTags>false</includeTags>
          </jenkins.plugins.git.GitSCMSourceDefaults>
          <hudson.plugins.git.extensions.impl.BuildChooserSetting>
            <buildChooser class="jenkins.plugins.git.AbstractGitSCMSource$SpecificRevisionBuildChooser">
              <revision reference="../../../../../../../actions/hudson.plugins.git.util.BuildData/buildsByBranchName/entry/hudson.plugins.git.util.Build/marked"/>
            </buildChooser>
          </hudson.plugins.git.extensions.impl.BuildChooserSetting>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/jenkins_home/workspace/jee-app_production</workspace>
      <changelogFile>/var/jenkins_home/jobs/jee-app/branches/production/builds/5/changelog0.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>